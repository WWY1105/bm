/**
 * @author litianyuan
 * @date   2014-12-18
 */
var notNull = function (e) {
    return e != null && e && e != "";
};

var uniqArr = function (arr) {
    if (arr) {
        return arr.filter(function (item, pos, self) {
            return self.indexOf(item) == pos;
        });
    }
    ;
};

var getSubtimes = function (dataArr, typeArr) {
    var result = {};
    angular.forEach(dataArr, function (value, idx) {
        if (typeArr[value]) {
            this[value] = typeArr[value];
        }
    }, result);
    return result;
}

//判断空对象的方法：
var isEmptyObject = function (obj) {
    for (var x in obj) {
        return false;
    }
    return true;
}
//判断对象属性的数量
var objectCount = function (obj) {
    var cnt = 0;
    angular.forEach(obj, function (data, key) {
        cnt++;
    });

    return cnt;
}

function formatDate(date, format) {
    if (!date) return;
    if (!format) format = "yyyy-MM-dd";
    switch (typeof date) {
        case "string":
            date = new Date(date.replace(/-/g, "/"));
            break;
        case "number":
            date = new Date(date);
            break;
    }
    if (!date instanceof Date) return;
    var dict = {
        "yyyy": date.getFullYear(),
        "M": date.getMonth() + 1,
        "d": date.getDate(),
        "H": date.getHours(),
        "m": date.getMinutes(),
        "s": date.getSeconds(),
        "MM": ("" + (date.getMonth() + 101)).substr(1),
        "dd": ("" + (date.getDate() + 100)).substr(1),
        "HH": ("" + (date.getHours() + 100)).substr(1),
        "mm": ("" + (date.getMinutes() + 100)).substr(1),
        "ss": ("" + (date.getSeconds() + 100)).substr(1)
    };
    return format.replace(/(yyyy|MM?|dd?|HH?|ss?|mm?)/g, function () {
        return dict[arguments[0]];
    });
}

//获取category对应的共享活动
getShareCategory = function (category) {
    var result = [];
    var arr = sharedActivitys[category];
    for (var i = 0; arr && i < arr.length; i++) {
        var obj = {};
        obj.id = arr[i];
        obj.name = allRuleCategory[arr[i]];
        result.push(obj);
    }
    return result;
}

//转换对象到数组，类似于Object.keys()
objectKeys = function (obj) {
    var res = [];
    angular.forEach(obj, function (data, idx) {
        this.push(idx);
    }, res);
    return res;
}

//cb回调函数，对数组元素使用使用，类似于Array.map();
arrayMap = function (arr, cb) {
    var tmp = [];
    if (typeof cb === "function") {
        angular.forEach(arr, function (data, idx) {
            var t = data;
            t = cb(data);
            this.push(t)
        }, tmp);
    } else {
        tmp = arr;
    }
    return tmp;
}

//filter过滤函数，对数组元素进行过滤，类似Array.filter()
arrayFilter = function (arr, filter) {
    var tmp = [];
    if (typeof filter === "function") {
        angular.forEach(arr, function (data, idx) {
            filter(data) && this.push(data);
        }, tmp);
    } else {
        tmp = arr;
    }
    return tmp;
}

//filter过滤函数，对数组元素进行过滤，类似map.filter()
mapFilter = function (obj, filter) {
    var tmp = {};
    if (typeof filter === "function") {
        angular.forEach(obj, function (data, idx) {
            filter(data) && (this[idx] = data);
        }, tmp);
    } else {
        tmp = obj;
    }
    return tmp;
}

formatDatas = function (obj) {
    if (!obj) {
        tmp = {}
    } else if (obj.constructor === Array) {
        var tmp = {};
        angular.forEach(obj, function (val, idx) {
            this[val] = true;
        }, tmp);
    } else {
        tmp = obj;
    }
    return tmp;
}

angular.module('app').config(appRouteConfig);

function appRouteConfig($routeProvider) { //路由规则
    $routeProvider.when('/shops', {
            templateUrl: "admin/shops/index.html",
            controller: "ShopsCtr"
        }) //商店首页
        .when('/shops/add', {
            templateUrl: "admin/shops/add.html",
            controller: "ShopsAddCtr"
        }) //门店添加
        .when('/shops/add/:shopId', {
            templateUrl: "admin/shops/add.html",
            controller: "ShopsAddreturnCtr"
        }) //门店添加返回
        .when('/shops/add2/:shopId', {
            templateUrl: "admin/shops/add2.html",
            controller: "ShopsAdd2Ctr"
        }) //门店添加2
        .when('/shops/add3/:shopId', {
            templateUrl: "admin/shops/add3.html",
            controller: "ShopsAdd3Ctr"
        }) //门店添加3
        .when('/shops/show/:shopId', {
            templateUrl: "admin/shops/show.html",
            controller: "ShopsShowCtr"
        }) //门店详情
        .when('/staff', {
            templateUrl: "admin/Staff/index.html",
            controller: "StaffCtr"
        }) //员工管理
        .when('/staff/:shopId', {
            templateUrl: "admin/Staff/index.html",
            controller: "StaffCtr"
        }) //单店员工管理
        .when('/staff/show/:shopId', {
            templateUrl: "admin/Staff/show.html",
            controller: "StaffShowCtr"
        }) //门店员工展示
        .when('/staff/staffadd/:shopId', {
            templateUrl: "admin/Staff/staffadd.html",
            controller: "StaffaddCtr"
        }) //添加员工
        .when('/staff/staffedit/:guestid', {
            templateUrl: "admin/Staff/staffedit.html",
            controller: "StaffeditCtr"
        }) //修改员工
        .when('/staff/keeperedit/:guestid', {
            templateUrl: "admin/Staff/keeperedit.html",
            controller: "StaffeditCtr"
        }) //店长编辑
        .when('/staff/keeperadd/:shopId', {
            templateUrl: "admin/Staff/keeperadd.html",
            controller: "StaffaddCtr"
        }) //添加店长
        .when('/staff/password/:guestid', {
            templateUrl: "admin/Staff/password.html",
            controller: "passwordCtr"
        }) //重置密码
        .when('/password', {
            templateUrl: "my/password.html",
            controller: "edit_passwordCtr"
        }) //修改自己的密码
        .when('/rule', {
            templateUrl: "admin/rule/index.html",
            controller: "RuleCtr"
        }) //活动列表
        .when('/rule/add', {
            templateUrl: "admin/rule/add.html",
            controller: "RuleAddCtr"
        }) //添加活动第一步
        .when('/rule/add2/:activityid', {
            templateUrl: "admin/rule/add2.html",
            controller: "RuleAdd2Ctr"
        }) //添加活动第二部
        .when('/rule/edit/:activityid', {
            templateUrl: "admin/rule/ruleedit.html",
            controller: "RuleAddCtr"
        }) //修改活动
        .when('/rule/edit2/:activityid', {
            templateUrl: "admin/rule/ruleedit2.html",
            controller: "RuleAdd2Ctr"
        }) //修改活动
        .when('/rule/edit3/:activityid', {
            templateUrl: "admin/rule/ruleedit3.html",
            controller: "RuleAdd3Ctr"
        }) //修改活动
        .when('/rule/member', {
            templateUrl: "admin/rule/member.html",
            controller: "RuleMemberCtr"
        }) //会员规则
        .when('/rule/coupon', {
            templateUrl: "admin/rule/coupon.html",
            controller: "RuleCouponCtr"
        }) //会员规则
        .when('/customer/charge/:userId', {
            templateUrl: "admin/customer/charge.html",
            controller: "CustomerChargeCtr"
        }) //会员充值
        .when('/customer/point/:userId', {
            templateUrl: "admin/customer/point.html",
            controller: "CustomerPoicustomerntCtr"
        }) //顾客积分
        .when('/customer/coupon/:userId', {
            templateUrl: "admin/customer/coupon.html",
            controller: "CustomerCouponCtr"
        }) //顾客发券
        .when('/customer/add', {
            templateUrl: "admin/customer/add.html",
            controller: "CustomerAddCtr"
        }) //顾客发券
        .when('/customer/detail/:userId', {
            templateUrl: "admin/customer/detail.html",
            controller: "CustomerDetailCtr"
        }) //顾客详情
        .when('/customer', {
            templateUrl: "admin/customer/index.html",
            controller: "CustomerCtr"
        }) //顾客
        .when('/test', {
            templateUrl: "test.html",
            controller: "TestCtr"
        }) //设备管理
        .when('/devices', {
            templateUrl: "admin/devices/index.html",
            controller: "DevicesCtr"
        }) //test
        .when('/dish/add', {
            templateUrl: "admin/dish/add.html",
            controller: "DishAddCtr"
        }) //菜品添加
        .when('/dish', {
            templateUrl: "admin/dish/index.html",
            controller: "DishCtr"
        }) //菜品列表
        .when('/dish/edit/:dishId', {
            templateUrl: "admin/dish/add.html",
            controller: "DishEditCtr"
        }) //会员充值
        .when('/doc', {
            templateUrl: "admin/doc/index.html",
            controller: "DocCtr"//报表列表
        })
        .when('/finance', {
            templateUrl: "admin/finance/index.html",
            controller: "FinanceCtr"//报表列表
        })
        .otherwise({
            redirectTo: "/shops"
        }); //其他路径
}
/*------------------------------------------------------------------*/
app.controller('ShopsCtr', function ($scope, $location, $http) { //shoplist over
    $scope.config.breadset = [{ //
        name: "门店管理",
        href: indexUrl + "/admin.html#/shops"
    }, {
        name: "门店列表"
    }]; //面包屑
    $scope.bussniessTime = {
        1001: "早市",
        1002: "午市",
        1003: "下午茶",
        1004: "晚市",
        1005: "宵夜"
    };
    $scope.text = {
        1001: "",
        1002: "提交认证时间：",
        1003: "认证通过时间：",
        1004: "提交关闭时间",
        1005: "停用时间"
    }
    $scope.detailShow = -1;
    var data = ajaxSendFn({count: 10}, "/shops/shops", "GET");
    if (data.code != 200) $location.path("/shops/add");
    $scope.shops = data.result;
    $scope.select = function () {
        var json = {};
        $scope.active && (json.state = $scope.active);
        $scope.shops = ajaxSendFn(json, "/shops/shops", "GET").result;
    }
    $scope.$watch('shops.page', function (newVal, oldVal) {
        if (newVal && oldVal && newVal !== oldVal) {
            var json = {page: $scope.shops.page, count: $scope.shops.count};
            $scope.active && (json.state = $scope.active);
            $scope.shops = ajaxSendFn(json, "/shops/shops", "GET").result;
        }
    });
    $scope.send = function () {
        $scope.shops = ajaxSendFn({name: $scope.name}, "/shops/shops", "GET").result;
    }
    $scope.detail = function (id, index) {
        $scope.shop = ajaxSendFn({}, "/shops/shop/" + id, "GET", 1).result;//获取门店基本信息
        $scope.detailShow = index;
    }
    $scope.deleteShopFn = function () {
        if (confirm("是否确定申请关闭?")) {
            var data = ajaxSendFn({}, "/shops/shop/" + $scope.shop.id, "POST");
            if (data.code == 200) alert("申请关闭成功！");
            else errorMsg(data);

        }
    }
});
/*------------------------------------------------------------------*/
app.controller('ShopsAddCtr', function ($scope, $location) {
    $scope.config.breadset = [{ //
        name: "门店管理",
        href: indexUrl + "/admin.html#/shops"
    }, {
        name: "添加门店"
    }]; //面包屑
    $scope.posts = {};
    $scope.shopType = [{
        code: 1001,
        text: '支持桌边付'
    }, {
        code: 1002,
        text: '不支持桌边付'
    }];
    $scope.posts.shopType = $scope.shopType[0].code;
    $scope.areaJson1 = ajaxSendFn({}, "/dict/area", "GET").result;
    $scope.area1change = function () { //
        $scope.areaJson2 = ajaxSendFn({code: $scope.area.area1}, "/dict/area", "GET").result || [];
        $scope.area.area2 = $scope.areaJson2[0] && $scope.areaJson2[0].code;
        $scope.areaJson3 = $scope.area.area2 ? (ajaxSendFn({code: $scope.area.area2}, "/dict/area", "GET").result || []) : false;
        $scope.posts.area = ($scope.areaJson3[0] && $scope.areaJson3[0].code) || ($scope.areaJson2[0] && $scope.areaJson2[0].code) || ($scope.areaJson1[0] && $scope.areaJson1[0].code);
    };
    $scope.area2change = function () { //
        $scope.areaJson3 = ajaxSendFn({code: $scope.area.area2}, "/dict/area", "GET").result || [];
        $scope.posts.area = ($scope.areaJson3[0] && $scope.areaJson3[0].code) || $scope.area.area2;
    };
    $scope.postSend = function () { //
        // var sendJson = JSON.stringify($scope.posts);
        if (/[(())]/.test($scope.posts.name)) {
            $scope.config.modalContent = "请不要输入带括弧的名称";
            $(".modal").modal("show");
            return;
        }
        var postsend = ajaxSendFn($scope.posts, "/shops/shop", "POST", 1);
        if (postsend.code == 200) {
            $location.path("/shops/add2/" + postsend.result.id);
        } else { //
            $scope.config.modalContent = postsend.message;
            $(".modal").modal("show");
            return;
        }
    };
})
/*------------------------------------------------------------------*/
app.controller('ShopsAddreturnCtr', function ($scope, $location, $routeParams) {
    $scope.config.breadset = [{ //
        name: "门店管理",
        href: indexUrl + "/admin.html#/shops"
    }, {
        name: "添加门店"
    }]; //面包屑
    shopTypes = ajaxSendFn({}, "/dict/SHOP_TYPE/item", "GET").result;
    $scope.shopget = ajaxSendFn({}, "/shops/shop/" + $routeParams.shopId, "GET").result.shop;
    $scope.shopType = shopTypes;
    $scope.posts = { //
        id: $scope.shopget.id,
        area: $scope.shopget.area,
        name: $scope.shopget.name,
        shopCode: $scope.shopget.shopCode,
        shopType: $scope.shopget.shopType,
        tel: $scope.shopget.tel,
    };
})
/*------------------------------------------------------------------*/
app.controller('ShopsAdd2Ctr', function ($scope, $location, $routeParams) {
    $scope.config.breadset = [{ //
        name: "门店管理",
        href: indexUrl + "/admin.html#/shops"
    }, {
        name: "添加店长"
    }]; //面包屑
    $scope.posts = {};
    $scope.postSend = function () { //
        sendJsons = {
            "name": $scope.posts.name,
            "nickname": $scope.posts.nickname,
            "password": hex_md5($scope.posts.password),
            "shopId": $routeParams.shopId,
            "roleType": "K"
        };
        for (var x in sendJsons) {
            if (sendJsons[x] == "" || !sendJsons[x] || sendJsons == null) { //
                delete sendJsons[x];
            }
        }
        sendJson = JSON.stringify(sendJsons);
        postsend = ajaxSendFn(sendJson, constUrlDict["staff"], "POST", 1);
        if (postsend.code == 200) {
            $location.path("/shops/add3/" + $routeParams.shopId);
        } else { //
            alert(postsend.message);
            return;
        }
    };
    $scope.reshpwd = function () {
        console.log($scope.staffadd_form);
        if ($scope.repassword == $scope.posts.password) { //
            $scope.staffadd_form.repassword.$error.pattern = false;
        } else { //
            $scope.staffadd_form.repassword.$error.pattern = true;
        }
    }
})
/*------------------------------------------------------------------*/
app.controller('ShopsAdd3Ctr', function ($scope, $location, $routeParams) {
    $scope.config.breadset = [{ //
        name: "门店管理",
        href: indexUrl + "/admin.html#/shops"
    }, {
        name: "添加完成"
    }]; //面包屑
    shopsget = ajaxSendFn({}, "/shops/shop/" + $routeParams.shopId, "GET");
    $scope.shopshow = shopsget.code == 200 ? shopsget.result : false;
})
/*------------------------------------------------------------------*/
app.controller('ShopsShowCtr', function ($scope, $routeParams, $http) {
    $scope.shopId = $routeParams.shopId;
    $scope.config.breadset = [{ //
        name: "门店管理",
        href: indexUrl + "/admin.html#/shops"
    }, {
        name: "门店状态"
    }]; //面包屑
    $scope.shopshow = {
        result: {
            businesstime: {}
        }
    };
    $scope.bussniessTime = {
        1001: "早市",
        1002: "午市",
        1003: "下午茶",
        1004: "晚市",
        1005: "宵夜"
    };
    var data = ajaxSendFn({}, "/shops/shop/" + $routeParams.shopId, "GET", 1);//获取门店基本信息
    $scope.shopshow.result = data.result || {};
    $scope.shopshow.result.shopType = shopTypeJson[$scope.shopshow.result.shopType];
    if (!$scope.shopshow.result.latitude || !$scope.shopshow.result.longitude) return;
    $scope.shopshow.map = "http://restapi.amap.com/v3/staticmap?zoom=16&size=180*120&markers=-1,http://api.amap.com/Public/imgbox/static/8.png,0:" + $scope.shopshow.result.longitude + "," + $scope.shopshow.result.latitude + "&key=ee95e52bf08006f63fd29bcfbcf21df0";

    $scope.deleteShopFn = function () {
        if (confirm("是否确定申请关闭?")) {
            var data1 = ajaxSendFn({}, "/shops/shop/" + $routeParams.shopId, "POST");
            $scope.shopshow.result.state = "1004";
            if (data.code == 200) alert("申请关闭成功！");
            else errorMsg(data);

        }
    }
})
/*------------------------------------------------------------------*/
app.controller('StaffCtr', function ($scope, $routeParams) {
    $scope.config.breadset = [{ //
        name: "员工管理",
        href: indexUrl + "/admin.html#/staff"
    }, {
        name: "员工列表"
    }]; //面包屑
    var data1 = ajaxSendFn({count: 10}, constUrlDict["staffs-base"], "GET");//获取门店基本信息
    $scope.staffs = data1.result || [];
    //、、、、、、
    $scope.$watch('staffs.page', function (newVal, oldVal) {
        if (newVal && oldVal && newVal !== oldVal) {
            var json = {page: $scope.staffs.page, count: $scope.staffs.count};
            $scope.staffs = ajaxSendFn(json, constUrlDict["staffs-base"], "GET").result;
        }
    });
    $scope.detail = function (id, index) {
        $scope.staff = ajaxSendFn({shopId: id}, constUrlDict["staffs-shop"], "GET", 1).result;//获取门店基本信息
        $scope.detailShow = index;
    }
    $scope.modal = function (id, name) {
        $scope.staffget = ajaxSendFn({}, constUrlDict["staff"] + "/" + id, "GET").result;
        $("#" + name).modal('show');
    }
    $scope.delete = function (id) { //
        if (!confirm("一旦删除将不可恢复，是否确认删除？")) return false;
        var staffDelRe = ajaxSendFn({}, constUrlDict["staffs-base"] + "/" + id, "POST");
        if (staffDelRe.code == 200) { //
            alert("删除成功");
            $scope.staff = ajaxSendFn({shopId: $scope.staffs.items[$scope.detailShow].id}, constUrlDict["staffs-shop"], "GET").result;
        } else { //
            errorMsg(staffDelRe);
        }
    }
    $scope.postSend = function () {
        var id = $scope.staffget.id;
        delete $scope.staffget.id;
        result = ajaxSendFn(JSON.stringify($scope.staffget), "/staffs/staff/" + id, "POST", 1);
        if (result.code == 200) { //
            $("#edit").modal('hide');
            $scope.staff = ajaxSendFn({shopId: $scope.staffget.shopId}, constUrlDict["staffs-shop"], "GET", 1).result;
        } else {
            errorMsg(result);
        }
    };
    $scope.resetPassword = function () { //
        if (!$scope.staffadd_form.$valid) {
            $scope.staffadd_form.submitted = true;
            return;
        } else { ///
            var json = {};
            angular.extend(json, $scope.posts);
            json.password = hex_md5($scope.posts.password);
            result = ajaxSendFn(json, constUrlDict["staffs-password"] + "/" + $scope.staffget.id, "POST");
            if (result.code == 200) { //
                $("#password").modal('hide');
                alert("修改成功");
            } else {
                errorMsg(result);
            }
        }
    }
    if ($routeParams.shopId) {
        for (var i = 0; i < $scope.staffs.items.length; i++) {
            if ($routeParams.shopId == $scope.staffs.items[i].id) {
                $scope.detail($routeParams.shopId, i);
            }
        }
    }


})
/*------------------------------------------------------------------*/
app.controller('StaffShowCtr', function ($scope, $location, $routeParams) {
    $scope.user = {};
    $scope.user.list = {
        keeper: [],
        staffs: []
    };
    $scope.user.shopId = $routeParams.shopId;
    $scope.config.breadset = [{ //
        name: "员工管理",
        href: indexUrl + "/admin.html#/staff"
    }, {
        name: "员工列表"
    }]; //面包屑
    $scope.shopget = ajaxSendFn({}, "/shops/shop/" + $routeParams.shopId, "GET").result;
    var staffs = ajaxSendFn({shopId: $routeParams.shopId}, constUrlDict["staffs-shop"], "GET").result;
    $scope.user.get = staffs ? staffs.items : [];
    $scope.user.get = $scope.user.get ? $scope.user.get : "";
    for (var i = 0; i < $scope.user.get.length; i++) {
        if ($scope.user.get[i].roleType == "K") { //
            $scope.user.list.keeper = $scope.user.get[i];
        } else { //
            $scope.user.list.staffs.push($scope.user.get[i]);
        }
    }
    $scope.staffDelFn = function (index) { //
        if (!confirm("一旦删除将不可恢复，是否确认删除？")) return false;
        staffDelRe = ajaxSendFn({}, constUrlDict["staffs-base"] + "/" + $scope.user.list.staffs[index].id, "POST");
        if (staffDelRe.code == 200) { //
            $scope.user.list.staffs.splice(index, 1);
            alert("删除成功");
        } else { //
            errorMsg(staffDelRe);
        }
    }
    $scope.keepperDelFn = function () { //
        if (!confirm("一旦删除将不可恢复，是否确认删除？")) return false;
        staffDelRe = ajaxSendFn({}, constUrlDict["staffs-base"] + "/" + $scope.user.list.keeper.id, "POST");
        if (staffDelRe.code == 200) { //
            $scope.user.list.keeper = null;
        } else { //
            errorMsg(staffDelRe);
        }
    }

})
/*------------------------------------------------------------------*/
app.controller('StaffaddCtr', function ($scope, $location, $routeParams) {
    $scope.show = {};
    $scope.posts = {};
    $scope.staffadd_form = {};
    $scope.config.breadset = [{ //
        name: "员工管理",
        href: indexUrl + "/admin.html#/staff"
    }, {
        name: "添加员工"
    }]; //面包屑
    $scope.shopsget = ajaxSendFn({}, "/shops/shop/" + $routeParams.shopId, "GET").result;
    $scope.textCheckJson = textCheckJson;
    $scope.textCheckErrorJson = textCheckErrorJson;
    $scope.staffadd_form.submitted = false;
    $scope.posts.gender = 0;
    $scope.shopId = $routeParams.shopId;
    $scope.staffaddsend = function (keeper) { //
        var sendJson = {};
        sendJson = $scope.posts;
        sendJson.shopId = $routeParams.shopId;
        sendJson.roleType = keeper == "keeper" ? "K" : "S";
        //sendJson.password = hex_md5(sendJson.password);
        result = ajaxSendFn(JSON.stringify(sendJson), constUrlDict["staff"], "POST", 1);
        if (result.code == 200) { //
            alert("添加成功");
            $location.path("/staff/show/" + $routeParams.shopId);
        } else {
            errorMsg(result);
        }
    }
})
app.controller('StaffeditCtr', function ($scope, $location, $routeParams, $http) {
    $scope.posts = {};
    $scope.staffadd_form = {};
    $scope.config.breadset = [{ //
        name: "员工管理",
        href: indexUrl + "/admin.html#/staff"
    }, {
        name: "编辑员工"
    }]; //面包屑
    $scope.staffget = ajaxSendFn({}, constUrlDict["staff"] + "/" + $routeParams.guestid, "GET").result;
    $scope.staffadd_form.submitted = false;
    $scope.posts.gender = $scope.staffget.gender;
    $scope.posts.nickname = $scope.staffget.nickname;
    $scope.posts.shopId = $scope.staffget.shopId;
    $scope.show = {};
    var data = ajaxSendFn({}, "/shops/shop/" + $scope.staffget.shopId, "GET", 1);
    console.log(data);
    if (data.code == 200) $scope.show.shopname = data.result.name;
    $scope.staffaddsend = function () { //
        $scope.posts.shopId = $scope.staffget.shopId;
        var sendJson = JSON.stringify($scope.posts);
        result = ajaxSendFn(sendJson, constUrlDict["staff"] + "/" + $scope.staffget.id, "POST", 1);
        if (result.code == 200) { //
            alert("修改成功");
            $location.path("/staff/show/" + $scope.staffget.shopId);
        } else {
            errorMsg(result);
        }
    }
})
app.controller('passwordCtr', function ($scope, $location, $routeParams) {
    $scope.show = {};
    $scope.posts = {};
    $scope.staffadd_form = {};
    $scope.config.breadset = [{ //
        name: "员工管理",
        href: indexUrl + "/admin.html#/Staff"
    }, {
        name: "重设密码"
    }]; //面包屑
    $scope.staffget = ajaxSendFn({}, constUrlDict["staff"] + "/" + $routeParams.guestid, "GET").result;
    $scope.textCheckJson = textCheckJson;
    $scope.textCheckErrorJson = textCheckErrorJson;
    $scope.staffadd_form.submitted = false;
    $scope.staffget.shopname = ajaxSendFn({}, "/shops/shop/" + $scope.staffget.shopId, "GET").result.name;
    $scope.staffaddsend = function () { //
        if (!$scope.staffadd_form.$valid) {
            $scope.staffadd_form.submitted = true;
            return;
        } else { ///
            var json = {};
            angular.extend(json, $scope.posts);
            json.password = hex_md5($scope.posts.password);
            result = ajaxSendFn(json, constUrlDict["staffs-password"] + "/" + $scope.staffget.id, "POST");
            if (result.code == 200) { //
                alert("修改成功");
                $location.path("/staff/show/" + $scope.staffget.shopId);
            } else {
                errorMsg(result);
            }
        }
        ;
    }
})
app.controller('RuleCtr', function ($rootScope, $scope, $location, $filter) { //shoplist over
    $scope.config.breadset = [{ //
        name: "活动管理",
        href: indexUrl + "/admin.html#/rule"
    }, {
        name: "活动列表"
    }]; //面包屑
    var rule = ajaxSendFn({}, "/activity", "GET").result || [];
    var lastShow = $rootScope.lastShow;
    $scope.ruleDic = {
        nonParticipations: "不参与活动商品",
        periods: "有效时段",
        time: "时间",
        shops: "分店"
    }; //将key转为中文
    $scope.view = {};
    $scope.view.rule = $filter("orderBy")(rule, "createTime", true);
    if (lastShow != null) {
        $scope.view.rule[lastShow].show = 1;
    }
    //setIcon();
    //function setIcon() {
    //    for (x in $scope.view.rule) { //定义icon
    //        var tem = $scope.view.rule[x];
    //        $scope.view.rule[x].icon = {};
    //        for (y in tem.rules) {
    //            tem.rules[y].type = tem.rules[y].type.split("_");
    //            $scope.view.rule[x].icon[tem.rules[y].type[0]] = 1;
    //        }
    //    }
    //}

    $scope.pannel = function (nowindex) { //切换显示列表
        if (lastShow != null && lastShow >= 0 && nowindex === lastShow) {
            $scope.view.rule[nowindex].show = 0;
            lastShow = -1;
            delete $rootScope.lastShow;
        } else {
            var id = $scope.view.rule[nowindex]._id;
            if (!$scope.view.rule[nowindex].rulesget) {
                tem = ajaxSendFn({}, "/activity/" + id + "/rules", "GET");
                if (tem.code == 200) $scope.view.rule[nowindex].rulesget = tem.result;
            }
            $.each($scope.view.rule, function (index) {
                $scope.view.rule[index].show = 0;
            });
            $scope.view.rule[nowindex].show = 1;
            lastShow = nowindex;
            $rootScope.lastShow = lastShow;
        }
    }
    $scope.activityOn = function (id, i) { //上线
        re = ajaxSendFn({}, "/activity/" + id + "/on", "POST");
        if (re.code == 200) $scope.view.rule[i].on = true;
        else errorMsg(re);
    }
    $scope.activityOff = function (id, i) { //下线
        re = ajaxSendFn({}, "/activity/" + id + "/off", "POST");
        if (re.code == 200) $scope.view.rule[i].on = false;
        else console.error(re);
    }
    $scope.activityDel = function (id, i) {
        re = ajaxSendFn({}, "/activity/" + id, "DELETE");
        if (re.code == 200) {
            $scope.view.rule.splice(i, 1);
        } else alert(re.message);

    }
    $scope.activeFn = function (id, name) {
        re = ajaxSendFn({}, "/activity/" + id + '/' + name, "POST");
        if (re.code == 200) {
            var rule = ajaxSendFn({}, "/activity", "GET").result || [];
            $scope.view.rule = $filter("orderBy")(rule, "createTime", true);
        } else alert(re.message);
    }
});
app.controller('RuleAddCtr', function ($scope, $location, $filter, $routeParams) { //shoplist over
    $scope.config.breadset = [{ //
        name: "活动管理",
        href: indexUrl + "/admin.html#/rule"
    }, {
        name: "设置活动范围"
    }]; //面包屑

    $scope.checkshop = {};
    $scope.set = {
        times: ajaxSendFn({}, "/businesstimes/all", "GET").result,
        list: ajaxSendFn({state: 1002}, "/shops", "GET").result,
        list2: [],
        timeType: {
            "1001": "早市",
            "1002": "午市",
            "1003": "下午茶",
            "1004": "晚市",
            "1005": "宵夜"
        },
        periods: [],
    };
    $scope.set.time = getSubtimes($scope.set.times, $scope.set.timeType);
    if (!$scope.set.list) {
        alert("目前还没有添加门店");
        $location.path("/shops");
    }
    $scope.set.nonParticipation = ajaxSendFn({}, "/nonParticipation", "GET").result; //非参与项
    $scope.checkallstr = 0;

    $scope.posts = {
        periods: [],
        excludeWeekend: false,
        excludeHoliday: false,
        shared: [],
        shops: [],
    };
    $scope.view = {
        data: {},
        effectDates: {},
        periods: [],
        zhiding: $scope.config.time
    };
    if ($routeParams.activityid) {
        $scope.view.isEdit = true;
    } else {
        $scope.view.isEdit = false;
    }

    //活动类型
    $scope.ruleCategory = ruleCategory;
    $scope.$watch('posts.activityCategory', function (newVal, oldVal) {
        if (newVal && newVal !== oldVal) {
            $scope.shareRuleCategory = getShareCategory(newVal);
        }
    });
    //过滤活动同享数组，去除空元素
    $scope.filterShared = function () {
        return arrayFilter($scope.posts.shared, function (data) {
            return data ? true : false;
        });
    };
    $scope.checkAllCatagory = function () {
        if (!$scope.posts.catagoryAll) $scope.posts.shared = [];
        else {
            angular.forEach(
                $scope.shareRuleCategory,
                function (value, key) {
                    this[key] = value.id;
                }, $scope.posts.shared
            )
        }
        ;
    };
    $scope.categoryName = function (category) {
        var result = {};
        if (category) {
            var tmp = category.split('_')[0];
            angular.forEach($scope.ruleCategory, function (data, idx) {
                if (data.id === category) {
                    this.name = data.name;
                }
            }, result);
        }
        ;
        return result.name || "类型错误";
    }
    $scope.$watch('set.shopAll', function (newVal, oldVal) {
        if (newVal !== oldVal) {
            if (newVal) {
                angular.forEach($scope.set.list, function (value, key) {
                    this[key] = value.id;
                }, $scope.posts.shops)
            } else {
                $scope.posts.shops = [];
            }
        }
    });
    $scope.settime = function (a, b) { //
        $scope.view.periods[a] = $scope.view.periods[a] ? null : b;
    }

    $scope.sendJsons = function () { //arrRemoveNullFN
        sendtype = $routeParams.activityid ? "EDIT" : "ADD";
        sendid = $routeParams.activityid ? $routeParams.activityid : "";
        $scope.posts.shops = arrRemoveNullFN($scope.posts.shops);
        $scope.posts.periods = arrRemoveNullFN($scope.view.periods);
        var json = {
            dateRange: {},
        };
        json.nonParticipationId = $scope.posts.nonParticipationId;
        json.shared = uniqArr(arrRemoveNullFN($scope.posts.shared));
        json.name = $scope.posts.name;
        json.activityCategory = $scope.posts.activityCategory;
        json.shops = $scope.posts.shops;
        json.periods = $scope.posts.periods;
        json.excludeAmount = $scope.posts.excludeAmount;
        json.dateRangeCategory = $scope.view.data.dateType;

        if ($scope.view.data.dateType === "BIRTHDAY" && $scope.view.data.subType) {
            json.dateRangeCategory = $scope.view.data.subType;
        }
        //如果开始时间被修改过，并且小于今天，则报错
        if ($scope.view.data.dateType === "CONTINUOUS") {
            if (!$scope.view.dateRange.startDate || !$scope.view.dateRange.endDate) {
                alert("请填写开始和结束日期!");
                return;
            }
            if ($scope.view.dateRange.endDate < $scope.view.dateRange.startDate) {
                alert("结束日期不能小于开始日期!");
                return;
            } else {
                json.dateRange.startDate = $filter("date")($scope.view.dateRange.startDate, "yyyy-MM-dd 00:00:00");
                json.dateRange.endDate = $filter("date")($scope.view.dateRange.endDate, "yyyy-MM-dd 23:59:59");
            }
        } else if ($scope.view.data.dateType === "BIRTHDAY" && $scope.view.data.subType === "AROUND_FIX_DATE") {
            json.dateRange.beforeDays = $scope.view.dateRange.beforeDays || 0;
            json.dateRange.afterDays = $scope.view.dateRange.afterDays || 0;
        }

        json.dateRange.selectCategory = $scope.view.dateRange.selectCategory || 'NONE';
        if ($scope.view.dateRange.subType === "MANUAL_SELECT") {
            var arr = arrayMap(objectKeys($scope.view.dateRange.selectDates), function (data) {
                return data + " 00:00:00";
            });
            if (!isEmptyObject(arr)) {
                json.dateRange.selectDates = arr;
            }
        } else if ($scope.view.dateRange.subType === "MONTH_DAYS") {
            var arr = arrayMap(objectKeys(mapFilter($scope.view.dateRange.selectDays, notNull)), parseInt);
            if (!isEmptyObject(arr)) {
                json.dateRange.selectDays = arr;
            }
        } else if ($scope.view.dateRange.subType === "WEEKLY_DAY") {
            var arr = arrayMap(objectKeys(mapFilter($scope.view.dateRange.selectWeekDays, notNull)), parseInt);
            if (!isEmptyObject(arr)) {
                json.dateRange.selectWeekDays = arr;
            }
        }

        //选择排除，必须要指定排队日期
        if ((json.dateRangeCategory !== "SELECTED_DATES") && (json.dateRange.selectCategory === 'EXCLUDE') && (objectCount(json.dateRange) == 1)) {
            alert("没有指定排除日期！");
            return;
        }

        //'指定日期'类型必须有数据
        if ((json.dateRangeCategory === "SELECTED_DATES") && (objectCount(json.dateRange) == 1) && json.dateRange.selectCategory) {
            alert("没有指定日期！");
            return;
        }

        sendJson = JSON.stringify(json);
        postsend = ajaxSendFn(sendJson, concatUrl(constUrlDict["activity"], sendid), "POST", 1);
        if (postsend.code == 200) { //
            if (sendtype == "ADD") {
                $location.path("/rule/add2/" + postsend.result.id);
            } else {
                alert("保存成功");
                history.back();
            }
        } else { //
            errorMsg(postsend);
        }
    }

    $scope.addNonParticipation = function () {
        $scope.goods = "";
        $("#NonParticipation").modal("show");
    }
    $scope.NonParticipationSend = function () {
        send = ajaxSendFn({
            "items": $scope.goods.name
        }, "/nonParticipation", "POST", 2);
        if (send.code == 200) { //
            if (!$scope.set.nonParticipation) {
                $scope.set.nonParticipation = {};
            }
            ;
            $scope.set.nonParticipation._id = send.result;
            $scope.set.nonParticipation.items = $scope.goods.name;
            $("#NonParticipation").modal("hide");
        }
    }
    $scope.oldFN = function () { //获取旧的内容
        var tem = ajaxSendFn({}, concatUrl(constUrlDict["activity"], $routeParams.activityid) + "/detail", "GET").result;
        if (!tem) return;
        $scope.posts.name = tem.name;
        $scope.posts.hasRules = (tem.rules && tem.rules.length > 0) || false;
        $scope.posts.activityCategory = tem.activityCategory;
        $scope.view.data.dateType = tem.dateRangeCategory;

        if (tem.dateRangeCategory === "AROUND_FIX_DATE" || tem.dateRangeCategory === "MONTH_EFFECTIVE") {
            $scope.view.data.dateType = "AROUND_FIX_DATE";
            $scope.view.data.subType = tem.dateRangeCategory;
        }
        $scope.view.data[$scope.view.data.dateType] = {
            dateRange: tem.dateRange,
        };
        $scope.view.dateRange = $scope.view.data[$scope.view.data.dateType].dateRange;
        if (tem.dateRange) {
            if (tem.dateRange.selectDates) {
                $scope.view.dateRange.subType = "MANUAL_SELECT";
                $scope.view.dateRange.selectDates = arrayMap($scope.view.dateRange.selectDates, function (data) {
                    return data.split(/\s+/)[0];
                });
            } else if (tem.dateRange.selectDays) {
                $scope.view.dateRange.subType = "MONTH_DAYS";
            } else {
                $scope.view.dateRange.subType = "WEEKLY_DAY";
            }
        }

        if ($scope.posts.activityCategory) {
            $scope.shareRuleCategory = getShareCategory($scope.posts.activityCategory);
        }
        $scope.posts.excludeAmount = tem.excludeAmount;
        $scope.posts.nonParticipationId = tem.nonParticipationId;
        var temShops = {};
        if (tem.shops) {
            for (var i = 0, j = tem.shops.length || 0; i < j; i++) {
                temShops[tem.shops[i]] = 1;
            }
        }
        ;

        for (var i = 0, j = $scope.set.list.length || 0; i < j; i++) {
            if ($scope.set.list[i].id in temShops) $scope.posts.shops[i] = $scope.set.list[i].id;
        }
        angular.forEach($scope.set.time, function (data, idx) {
            this.push(idx);
        }, $scope.view.periods);

        angular.forEach($scope.view.periods, function (data, idx) {
            if (!tem.periods || tem.periods.indexOf(data) == -1) {
                this[idx] = null;
            }
        }, $scope.view.periods);

        angular.forEach($scope.shareRuleCategory, function (data, idx) {
            if (tem.shared && tem.shared.indexOf(data.id) != -1) {
                this[idx] = data.id;
            } else {
                this[idx] = false;
            }
        }, $scope.posts.shared);
    }
    if ($routeParams.activityid) $scope.oldFN();
});
app.controller('RuleDISCOUNTCtr', function ($scope) { //shoplist over
    $scope.DISCOUNT.posts = {
        type: "DISCOUNT"
    };
    $scope.DISCOUNT.posts.detail = [];
    $scope.DISCOUNT.addFn = function () {
        $scope.DISCOUNT.posts.detail.push({
            member: $scope.view.member[0].id
        });
    }
    $scope.DISCOUNT.removeFn = function (i) {
        $scope.DISCOUNT.posts.detail.splice(i, 1);
    }
    $scope.DISCOUNT.addFn();
});
app.controller('RuleLIMITCtr', function ($scope, $location) { //shoplist over
    $scope.LIMIT.posts = {
        type: "LIMIT_PREMENT"
    };
    $scope.LIMIT.posts.detail = [];
    $scope.LIMIT.addFn = function () {
        console.log($scope.LIMIT.posts)
        $scope.LIMIT.posts.detail.push({
            member: $scope.view.member[0].id
        });
    }
    $scope.LIMIT.removeFn = function (i) {
        $scope.LIMIT.posts.detail.splice(i, 1);
    }
    $scope.LIMIT.addFn();
});
app.controller('RulEspendasCtr', function ($scope, $location) { //折扣
    $scope.SPEND.posts = {
        type: "SPEND"
    };
    $scope.SPEND.posts.detail = [];
    $scope.SPEND.addFn = function () {
        console.log($scope.SPEND.posts)
        $scope.SPEND.posts.detail.push({
            member: $scope.view.member[0].id
        });
    }
    $scope.SPEND.removeFn = function (i) {
        $scope.SPEND.posts.detail.splice(i, 1);
    }
    $scope.SPEND.addFn();
});
app.controller('RulSpecialpriceCtr', function ($scope, $location) { //折扣
    $scope.SPECIAL.posts = {
        type: "SPECIAL"
    };
    $scope.SPECIAL.posts.detail = [];
    $scope.SPECIAL.addFn = function () {
        console.log($scope.SPECIAL.posts)
        $scope.SPECIAL.posts.detail.push({
            member: $scope.view.member[0].id
        });
    }
    $scope.SPECIAL.removeFn = function (i) {
        $scope.SPECIAL.posts.detail.splice(i, 1);
    }
    $scope.SPECIAL.addFn();
});
app.controller('RulCHARGECtr', function ($scope, $location) { //
    $scope.CHARGE.check = [];
    $scope.CHARGE.addFn = function (a) {
        $scope.CHARGE[a].posts.detail.push({
            member: $scope.view.member[0].id
        });
    }
    $scope.CHARGE.removeFn = function (a, i) {
        $scope.CHARGE[a].posts.detail.splice(i, 1);
    }
    var type = ["CHARGE_PREMENT", "CHARGE_POINT", "CHARGE_COUPON", "CHARGE_GIFT"];
    for (var i = 0; i < type.length; i++) {
        $scope.CHARGE[i] = {
            posts: {
                detail: [],
                type: type[i]
            }
        };
        $scope.CHARGE.addFn(i);
    }
});
app.controller('RulPointCtr', function ($scope, $location) { //shoplist over
    $scope.POINT.posts = {
        type: "POINT",
        detail: []
    };
    $scope.POINT_CONSUME.posts = {
        type: "POINT_CONSUME",
        detail: []
    };
    $scope.POINT_GIFT.posts = {
        type: "POINT_GIFT",
        detail: []
    };
    $scope.POINT_COUPON.posts = {
        type: "POINT_COUPON",
        detail: []
    };
    $scope.POINT.addFn = function (a) {
        $scope[a].posts.detail.push({
            member: $scope.view.member[0].id
        });
    }
    $scope.POINT.removeFn = function (a, i) {
        $scope[a].posts.detail.splice(i, 1);
    }
    $scope.POINT.addFn('POINT');
    $scope.POINT.addFn('POINT_CONSUME');
    $scope.POINT.addFn('POINT_GIFT');
    $scope.POINT.addFn('POINT_COUPON');
});
app.controller('RuleMemberCtr', function ($scope, $filter) {
    $scope.config.breadset = [{ //
        name: "活动管理",
        href: indexUrl + "/admin.html#/rule"
    }, {
        name: "会员规则管理"
    }]; //面包屑
    $scope.plan = {
        add: 0
    };
    $scope.upgradeType = {
        "CUSTOMER": "CUSTOMER",
        "MEMBER": "MEMBER"
    };
    var temMemberGet = ajaxSendFn({}, "/memberUpgrade", "GET").result || [];
    $scope.view = {
        member: $filter('orderBy')(temMemberGet.strategy, "grade", false) || [],
        state: temMemberGet.on,
        plan: {},
        isUpdate: false,
        maxGrades: 6, //级别数量
    };

    $scope.posts = [];
    $scope.check = {};
    // $('[data-toggle="tooltip"]').tooltip()
    $scope.closeModal = function () {
        $scope.view.member[$scope.view.plan.level - 1].name = $scope.oldGradeName;
        $scope.view.isUpdate = false;
        $("#memberadd").modal("hide");
    }
    $scope.handleClick = function (a) {
        if (!$scope.view.isUpdate) {
            $scope.addplan(a);
        } else {
            $scope.updatePlan(a);
        }
    }
    $scope.validateName = function (a, name) {
        var isInvalid = false;
        angular.forEach($scope.view.member, function (value, idx) {
            if (!isInvalid) {
                if (idx != a - 1 && name === value.toName) {
                    isInvalid = true;
                }
            }
        });
        return isInvalid;
    }
    $scope.addnewFn = function (a) {
        $scope.tem = {};
        $scope.planform.memberName.$touched = false;
        $scope.view.plan.level = $scope.view.member.length + 1;
        $("#memberadd").modal("show");
    };
    $scope.updateFn = function (a) {
        $scope.tem = $scope.view.member[a - 1];
        $scope.oldGradeName = $scope.tem.name;
        $scope.view.isUpdate = true;
        $scope.view.plan.level = a;
        $("#memberadd").modal("show");
    }
    $scope.switchStatus = function (bool) {
        var str = bool === true ? "on" : "off";
        var res = ajaxSendFn({}, "/memberUpgrade/" + str, "POST");
        if (res.code != 200) {
            errorMsg(res);
        } else {
            $scope.view.state = bool;
            var astr = str === "on" ? "启用" : "停用";
            $("#turnon").modal("hide");
            $("#turnoff").modal("hide");
            alert("您已成功" + astr + "会员计划");
        }
    }
    $scope.addplan = function (a) {
        send = ajaxSendFn({name: $scope.tem.name}, "/memberGrade", "POST");
        if (send.code == 200) { //
            $scope.tem.id = send.result;
            if (!$scope.view.member) {

            }
            $scope.view.member[$scope.view.member.length] = {
                toName: $scope.tem.name,
                toId: $scope.tem.id,
                toGrade: $scope.view.member.length + 1
            };
            $scope.view.show = {
                toName: $scope.tem.name,
                toGrade: $scope.view.member.length - 1
            };
            $scope.posts = [];
            $("#memberadd").modal("hide");
            $scope.showFn($scope.view.member.length);
        } else {
            errorMsg(send);
        }
        $scope.plan = {
            add: 1
        };
    }
    $scope.updatePlan = function (a) {
        if ($scope.validateName(a, $scope.tem.name) || $scope.tem.name === $scope.oldGradeName) {
            alert("会员名称已被占用");
            return;
        }
        send = ajaxSendFn({
            name: $scope.tem.name
        }, "/memberGrade/" + $scope.tem.id, "POST");
        if (send.code == 200) {
            $scope.view.member[a - 1].name = $scope.tem.name;
            $("#memberadd").modal("hide");
            $scope.view.isUpdate = false;
        } else {
            $scope.view.member[a - 1].name = $scope.oldGradeName;
            errorMsg(send);
        }
    }
    $scope.closeFn = function (a) {
        $scope.plan[a] = 0;
    };
    $scope.showFn = function (a) {
        $scope.view.show = $scope.view.member[a - 1];
        if (!$scope.view.member[a - 1].Upgrade) $scope.view.member[a - 1].Upgrade = ajaxSendFn({}, "/memberUpgrade/toId/" + $scope.view.member[a - 1].toId, "GET").result || [];
        $scope.posts = {};
        $scope.check = {};
        for (x in $scope.view.member[a - 1].Upgrade) {
            type = $scope.view.member[a - 1].Upgrade[x].type;
            if (!$scope.posts[type]) {
                $scope.posts[type] = {};
            }
            $scope.posts[type]._id = $scope.view.member[a - 1].Upgrade[x]._id;
            fromid = $scope.view.member[a - 1].Upgrade[x].fromId;
            //如果从一般顾客升级到第1级会员
            if (fromid === $scope.upgradeType["CUSTOMER"] && a === 1) {
                $scope.posts[type].value = $scope.view.member[a - 1].Upgrade[x].value;
                //如果从一般顾客直接升级到大于1级的会员，即跨级别升级
            } else if (fromid === $scope.upgradeType["CUSTOMER"] && a > 1) {
                $scope.posts[type].special_value = $scope.view.member[a - 1].Upgrade[x].value;
                if (type === "POINT") {
                    $scope.posts[type].value = $scope.view.member[a - 1].Upgrade[x].value;
                }
                //其他情况，按步就班升级，如1到2，2至3，3至4等
            } else {
                $scope.posts[type].value = $scope.view.member[a - 1].Upgrade[x].value;
            }
            if ("FREE" === type) {
                $scope.posts = true;
            }
            $scope.check[type] = true;
        }
        $("#memberedit").modal("show");
    }
    $scope.postSend = function () { //提交表单，添加、修改会员升级规则
        var jsons = {};
        var json = [];
        toid = $scope.view.member[$scope.view.show.toGrade - 1].toId;
        if ($scope.validateName($scope.view.show.toGrade, $scope.view.show.toName)) {
            alert("会员名称已被占用");
            return;
        }
        for (var x in $scope.posts) {
            if (x === "FREE" && !$scope.posts) {
                continue;
            }
            //如果规则的value有效
            _id = $scope.posts[x]._id;
            if ($scope.posts[x] && $scope.posts[x].value != null || x == "FREE") {
                var send = {};
                _id && (send._id = _id);
                send.type = x;
                send.toId = toid;
                var formid;
                if ($scope.view.show.toGrade <= 1) {
                    formid = $scope.upgradeType["CUSTOMER"];
                } else {
                    formid = $scope.view.member[$scope.view.show.toGrade - 2].toId;
                }
                send.fromId = formid;
                if (x != "FREE") {
                    send.value = $scope.posts[x].value;
                }
                json.push(send);
            }
            //如果规则的special_value有效
            if ($scope.posts[x].special_value != null) {
                var send = {};
                _id && (send._id = _id);
                send.type = x;
                send.toId = toid;
                send.fromId = $scope.upgradeType["CUSTOMER"];
                send.value = $scope.posts[x].special_value;
                json.push(send);
            }
        }
        jsons.toId = toid;
        jsons.toName = $scope.view.show.toName;
        jsons.strategies = json;
        re = ajaxSendFn(JSON.stringify(jsons), "/memberUpgrade", "POST", 1);
        if (re.code == 200) {
            $scope.view.member = ajaxSendFn({}, "/memberUpgrade", "GET").result.strategy || [];
            $scope.view.state = false;
            $("#memberedit").modal("hide");
            $scope.plan.add = 0;
        } else {
            errorMsg(re);
        }
    }
});
app.controller('RuleCouponOFFSETCASHCtr', function ($scope) { //
    /*
     $scope.OFFSETCASH.addFn=function (a) {
     $scope.OFFSETCASH.post[a].push({member:$scope.view.member[0]});
     }
     $scope.OFFSETCASH.removeFn=function (a,i) {
     $scope.OFFSETCASH.post[a].splice(i,1);
     console.log($scope.OFFSETCASH.post[a]);
     }
     $scope.OFFSETCASH.addFn();
     */
});
app.controller('CustomerCtr', function ($scope, tyFnFactory, $http, $location) { //
    $scope.config.breadset = [{ //
        name: "顾客管理",
        href: indexUrl + "/admin.html#/customer"
    }, {
        name: "顾客列表"
    }]; //面包屑
    $scope.dict = {
        consumptionQuotas: [
            {name: "消费额度=0", value: "=0"},
            {name: "消费额度>0", value: ">0"},
            {name: "消费额度>=100", value: ">=100"},
            {name: "消费额度>=300", value: ">=300"},
            {name: "消费额度>=500", value: ">=500"},
            {name: "消费额度>=1000", value: ">=1000"},
        ],
        consumptionTimes: [
            {name: "消费次数=0", value: "=0"},
            {name: "消费次数>0", value: ">0"},
            {name: "消费次数>=5", value: ">=5"},
            {name: "消费次数>=10", value: ">=10"},
            {name: "消费次数>=20", value: ">=20"},
            {name: "消费次数>=50", value: ">=50"},
            {name: "消费次数>=100", value: ">=100"}
        ]
    };
    $scope.view = {
        interest: {},
        attention: ajaxSendFn({}, "/customer/subscribe", "GET").result || {alipay:true}
    };
    $scope.view.shops = ajaxSendFn({}, "/shops", "GET").result || [];
    $scope.view.memberGrades = ajaxSendFn({}, constUrlDict["memberGrade"], "GET").result || [];
    $scope.view.customer = ajaxSendFn({}, "/customer", "GET").result || [];
    $scope.view.member = [];
    $scope.search = {};
    $scope.postSend = function () {
        $scope.view.customer = ajaxSendFn($scope.search, "/customer", "GET").result || [];
    }
    $scope.sendSubscribe = function () {
        var json = {}
        //json.subscribe = alipay;
        var data = ajaxSendFn($scope.attention, "/customer/subscribe", "POST");
        if (data.code == 200) {
            alert("修改成功");
        }
    }
    $scope.sendExcel = function () { //
        var formData = new FormData($("#uploadForm")[0]);
        $.ajax({
            url: basicUrl + "/customer/import" + "?" + sortUrl(),
            type: 'POST',
            data: formData,
            async: false,
            cache: false,
            contentType: false,
            processData: false,
            success: function (returndata) {
                alert(returndata);
            },
            error: function (returndata) {
                alert(returndata);
            }
        });
    }
    $scope.interestGetFn = function (a) {
        /*if (!$scope.view.interest[a])*/ $scope.customer = ajaxSendFn({"userId": a}, constUrlDict["benefit"], "GET").result || [];
    }
    $scope.pageChange = function () {
        $scope.search.page = $scope.view.customer.page;
        $scope.postSend();
    }
    $scope.viewDetail = function (userId) {
        $location.path("/customer/detail/" + userId);
    }
});
app.controller('CustomerChargeCtr', function ($scope, $routeParams, $filter, $http) { //
    $scope.config.breadset = [{ //
        name: "顾客管理",
        href: indexUrl + "/admin.html#/customer"
    }, {
        name: "顾客充值"
    }]; //面包屑
    $scope.view = {};
    $scope.posts = {
        type: 'PUT'
    };
    $scope.reason = {
        "PUT": "使用",
        "POST": "充值"
    };

    $scope.view.user = ajaxSendFn({}, constUrlDict["customer"] + "/" + $routeParams.userId, "GET").result || []
    $scope.view.interest = ajaxSendFn({userId: $routeParams.userId}, "/interest", "GET").result || [];
    $scope.send = function () {
        json = {};
        json.users = $routeParams.userId;
        json.charge = $scope.posts.charge;
        json.reason = "GIVE_FREE";
        reason = $scope.reason[$scope.posts.type];
        re = ajaxSendFn(JSON.stringify(json), "/interest", $scope.posts.type, 1);
        if (re.code == 200) {
            $scope.view.interest = ajaxSendFn({}, "/interest?userId=" + $routeParams.userId, "GET").result || [];
            $scope.posts.charge = 0;
            alert(reason + "成功");
        } else {
            errorMsg(re);
        }
        ;
    }
});
app.controller('CustomerPoicustomerntCtr', function ($scope, $routeParams) { //
    $scope.view = {
        user: ajaxSendFn({}, constUrlDict["customer"] + "/" + $routeParams.userId, "GET").result || []
    };
    $scope.posts = {
        type: 'PUT'
    };
    $scope.reason = {
        "PUT": "使用",
        "POST": "发放"
    };
    $scope.view.interest = ajaxSendFn({}, "/interest?userId=" + $routeParams.userId, "GET").result || [];
    $scope.send = function () {
        console.log($scope.posts)
        json = {};
        json.users = $routeParams.userId;
        json.point = $scope.posts.point;
        json.reason = "GIVE_FREE";
        reason = $scope.reason[$scope.posts.type];
        re = ajaxSendFn(JSON.stringify(json), "/interest", $scope.posts.type, 1);
        if (re.code == 200) {
            $scope.view.interest = ajaxSendFn({userId: $routeParams.userId}, "/interest", "GET").result || [];
            $scope.posts.point = 0;
            alert(reason + "成功");
        } else {
            errorMsg(re);
        }
        ;
    }
});
app.controller('CustomerCouponCtr', function ($scope, $routeParams) { //
    $scope.view = {
        user: ajaxSendFn({}, constUrlDict["customer"] + "/" + $routeParams.userId, "GET").result || []
    };
    $scope.view.coupons = ajaxSendFn({}, constUrlDict["coupon"], "GET").result || [];
    $scope.posts.coupons = [$scope.view.coupons[0]._id];
    $scope.add = function () {
        $scope.posts.coupons.push($scope.view.coupons[0]._id);
    }
    $scope.remove = function (a) {
        $scope.posts.coupons.splice(a, 1);
    }
    $scope.send = function () {
        json = {};
        json.users = $routeParams.userId;
        json.coupons = $scope.posts.coupons.join();
        console.log($scope.posts.coupons)
        json.reason = "GIVE_FREE";
        json.couponCount = $scope.posts.count;
        console.log(json)
        re = ajaxSendFn(JSON.stringify(json), "/interest", "POST", 1);
        if (re.code == 200) {
            $scope.view.interest = ajaxSendFn({}, "/interest?userId=" + $routeParams.userId, "POST", 1).result || [];
            $scope.posts.point = 0;
            alert("赠券成功");
        } else {
            errorMsg(re);
        }
        ;
    }
});
app.controller('CustomerAddCtr', function ($scope) { //
    $scope.view = {
        member: ajaxSendFn({}, "/memberGrade", "GET").result || []
    };
    $scope.posts = {
        gender: $scope.view.member[0].gender
    };
    $scope.send = function () {
        re = ajaxSendFn(JSON.stringify($scope.posts), "/customer/guest/GIVE", "POST", 1);
        if (re.code == 200) {
            alert("添加成功");
        } else {
            errorMsg(re);
        }
        ;
    }
});
app.controller('CustomerDetailCtr', function ($scope, $routeParams) { //
    var userId = $routeParams.userId;
    $scope.dict = {};
    $scope.dict.relationSourceType = relationSourceType;
    $scope.view = {};
    $scope.view.user = ajaxSendFn({}, "/customer/" + $routeParams.userId, "GET").result || [];
    $scope.view.benefit = ajaxSendFn({"userId": userId}, constUrlDict["benefit"], "GET").result || [];
    $scope.view.relation = ajaxSendFn({}, "/customerrelationmessage/firstshop/" + $scope.view.user.relationId, "GET").result || [];
    $scope.view.statrelation = ajaxSendFn({"userId": userId}, "/customerrelationmessage/statrelation/" + $scope.view.user.relationId, "GET").result || [];
    $scope.view.statcomment = ajaxSendFn({}, "/customerrelationmessage/statcomment/" + userId, "GET").result || [];
    $scope.view.charts = {
        show: false,
        title: {
            text: ""
        },
        options: {
            credits: {enabled: false},
            chart: {type: "line"},
            tooltip: {},
            xAxis: {},
            yAxis: {}
        },
        series: []
    };
    $scope.view.coupon = {};
    $scope.view.consume = {};
    $scope.showCouponList = function () {
        var relationId = $scope.view.user.relationId;
        $scope.view.coupon.list = ajaxSendFn({}, "/coupon/usablecouponlist/" + relationId, "GET").result || [];

        $scope.view.coupon.show = true;
        layer.open({
            title: '用户可用的优惠券',
            type: 1,
            content: $("#coupon"),
            area: ['600px', '480px']
        });
    };
    $scope.consumeList = function () {
        $scope.view.consume.list = ajaxSendFn({}, "/customerrelationmessage/consumelist/" + userId, "GET").result || [];
        $scope.view.consume.show = true;
        layer.open({
            title: '消费明细(最近100条)',
            type: 1,
            content: $("#consume"),
            area: ['600px', '480px']
        });
    };
    $scope.consumeCharts = function () {
        var data = ajaxSendFn({}, "/customerrelationmessage/consumptionlist/" + userId, "GET").result || [];
        var x = [];
        var y = [];
        for (d in data) {
            x.push(data[d].consumptionTime);
            y.push(data[d].amount);
        }

        $scope.view.charts.show = true;
        $scope.view.charts.title.text = "顾客近3个月消费记录";
        $scope.view.charts.options.xAxis = {
            title: {
                text: "消费日期"
            },
            labels: {
                formatter: function () {
                    return formatDate(this.value, "yyyy-MM-dd");
                }
            },
            categories: x
        };
        $scope.view.charts.options.yAxis =
        {
            title: {
                text: "消费额度"
            },
            labels: {
                formatter: function () {
                    return this.value;
                }
            }
        };
        $scope.view.charts.series = [
            {
                name: "消费",
                color: "#FF9655",
                data: y
            }
        ];
        layer.open({
            title: '顾客消费数据挖掘',
            type: 1,
            content: $("#charts"),
            area: ['600px', '480px']
        });
    };
})
;
app.controller('RuleAdd2Ctr', ['$scope', '$location', '$filter', '$routeParams', 'CouponFactory', function ($scope, $location, $filter, $routeParams, couponFac) { //shoplist over
    $scope.config.breadset = [{ //
        name: "活动管理",
        href: indexUrl + "/admin.html#/rule"
    }, {
        name: "修改活动详情"
    }]; //面包屑;
    $scope.btnDisable = 0;
    $scope.today = $filter('date')(new Date(), "yyyy-MM-dd");
    $scope.tem = {
        rules: {}
    };
    $scope.coupon = {
        shared: [],
        shops: []
    };
    $scope.posts = {
        coupons: {},
    };
    $scope.transferMap = {
        POINT_CONSUME: "POINTCONSUME",
        COUPON_FREE: "COUPONFREE",
        CHARGE_CONSUME: "CHARGECONSUME",
    };
    $scope.transferMapRev = {
        POINTCONSUME: "POINT_CONSUME",
        COUPONFREE: "COUPON_FREE",
        CHARGECONSUME: "CHARGE_CONSUME",
    };
    $scope.view = {};

    // $scope.isOpenOrClose = true;
    $scope.temcoupons2 = {};
    $scope.temcoupons = [];
    $scope.obtainRepeatCategory = obtainRepeatCategory;
    $scope.ruleFn = {
        openOrClose: function () {
            $scope.isOpenOrClose = !$scope.isOpenOrClose;
        },
        testAddOk: function () {
            console.log('OK');
            $scope.isOpenOrClose = false;
            $scope.view.coupons = couponFac.getAllCoupon();
        },
        testAddFail: function (result) {
            console.log("错误编号:" + result.code + ", 错误信息:" + result.message);
            errorMsg(result);
        },
        getCpouponFn: function () {
            $scope.view.coupons = ajaxSendFn({}, "/coupon", "GET").result || [];
        },
        getCouponType: function (id) {
            for (var i = 0; $scope.view.coupons && i < $scope.view.coupons.length; i++) {
                if ($scope.view.coupons[i].id === id) {
                    return $scope.view.coupons[i].category;
                }
            }
            ;
        },
        changeCoupon: function (value, dv) {
            if (dv.id) {
                dv.count = 1;
                for (var i = 0; i < $scope.view.coupons.length; i++) {
                    if ($scope.view.coupons[i].id === dv.id) {
                        dv.name = $scope.view.coupons[i].name;
                        break;
                    }
                }
                ;
            }
        },

        oldRuleFn: function () { //从服务器获取目前的规则列表
            var ruletem = ajaxSendFn({}, "/activity/" + $routeParams.activityid + "/detail", "GET").result;
            $scope.ruleFn.getCpouponFn();
            ruletem.activityCategory && ($scope.tem.activityCategory = ruletem.activityCategory.split('_')[0]);
            $scope.view.shop = ajaxSendFn({state: "1002"}, "/shops", "GET").result || [];
            $scope.tem.shops = [];
            for (var x in $scope.view.shop) $scope.tem.shops.push($scope.view.shop[x].id);
            if (!ruletem || !ruletem.rules) return;
            $scope.tem.rules = arrToObj(ruletem.rules, "type", "id");
            var oldrules = ajaxSendFn({ids: obj2Array(ruletem.rules, "id").join()}, "/activity/rule/ids", "GET").result || null;
            if (oldrules) { //
                $scope.btnDisable = 1; //假如有旧规则,就不可以添加新规则
                for (i = 0, j = oldrules.length; i < j; i++) {
                    var type = oldrules[i].type;
                    if ($scope.transferMap.hasOwnProperty(type)) {
                        oldrules[i].type = $scope.transferMap[type];
                    }
                    $scope.ruleFn.stateFn(oldrules[i].type, "show", 1, oldrules[i]);
                }
            }
        },
        stateFn: function (a, b, c, d) { //key,state,show,点击添加规则时调用
            var aRe = a.split("_")[0];
            if (aRe in $scope.view.rules) {
                $scope.view.rules[aRe].state = b;
                $scope.view.rules[aRe].show = c;
            }
            if (b == "add") $scope.ruleFn.buttonFn(a);
            if (!d) { //只让添加一项,就让设定活动内容按钮灰掉,d无值表示是手动点击
                $scope.btnDisable = 1;
                return;
            }
            var tem = d.type;
            if (c) $scope.view.rules[aRe].content[tem] = d;
        },
        closeFn: function (a) { //取消按钮
            if ($scope.view.rules[a].state == "edit") { //保存
                $scope.view.rules[a].state = "show";
            } else if ($scope.view.rules[a].state == "add") { //新增
                $scope.view.rules[a].state = "show";
            }
        },
        buttonFn: function (a) { //活动保存按钮
            if ($scope.view.rules[a].state == "show") { //修改
                $scope.ruleFn.postFn(a);
                $scope.view.rules[a].state = "edit";
            } else if ($scope.view.rules[a].state == "edit") { //保存
                var res = $scope.view.rules[a].postFunc(a);
                if (res) {
                    $location.path("/rule");
                    $scope.view.rules[a].state = "show";
                }
            } else if ($scope.view.rules[a].state == "add") { //新增
                for (x in $scope.view.rules[a].content) $scope.view.rules[a].addFunc(x);
                $scope.view.rules[a].state = "edit";
                $("#showadd").modal("hide");
            }
        },
        memberFn: function () { //会员获取
            $scope.view.member = ajaxSendFn({}, "/memberGrade", "GET").result || [];
            $scope.view.member = $filter('orderBy')($scope.view.member, 'grade');
            $scope.view.member.push({
                id: "CUSTOMER",
                name: "全员"
            }, {
                id: "MEMBER",
                name: "所有会员"
            });
        },
        dishFn: function () {//菜品获取
            $scope.view.dishes = ajaxSendFn({}, "/dishes", "GET").result || [];
            //$scope.details = {
            //    value: [{"id": ""}]
            //};

        },
        postFn: function (a) { //发送数据
            var tem = $scope.view.rules[a].content;
            $scope.posts[a] = {};
            for (x in tem) {
                var needCheck = true;
                $scope.posts[a][x] = tem[x];
                if (tem[x] instanceof Array) {
                    needCheck = false;
                }
                $scope.posts[a][x].check = needCheck;
                if (!tem[x].detail || !Object.keys(tem[x].detail).length) {
                    $scope.view.rules[a].addFunc(x);
                }
            }
        },
        addCouponFn: function (x) {
            $scope.ruleFn.addFn(x, function (a, b) {
                if (a === "COUPON" || b === "COUPON" || x === "COUPONFREE" || x === "SPECIAL_PRICE") {
                    var arr = $scope.posts[a][x].detail.CUSTOMER;
                    if (arr && arr.length > 0 && !isEmptyObject(arr[0])) {
                        var obj = {};
                        obj.value = [{}];
                        $scope.posts[a][x].detail.CUSTOMER.push(obj);
                    } else {
                        var obj = $scope.posts[a][x].detail.CUSTOMER[0];
                        obj.value = [{}];
                    }
                }
            })
        },
        addFn: function (x, cb) { //
            var cnt = 0;
            var a, b;
            var arr = x.split("_");
            if (arr && arr.length > 0) {
                a = arr[0];
            }
            if (arr && arr.length > 1) {
                b = arr[1];
            }
            if (!$scope.posts[a] || !$scope.posts[a][x] || !$scope.posts[a][x].detail || isEmptyObject($scope.posts[a][x].detail)) {
                if (!$scope.posts[a]) $scope.posts[a] = {};
                $scope.posts[a][x] = $scope.view.rules[a].content[x];
                // if (!$scope.posts[a][x].detail || isEmptyObject($scope.posts[a][x].detail))
                $scope.posts[a][x].detail = {
                    "CUSTOMER": [{}],
                };
                if (cb) cb(a, b);
                return;
            }
            ;
            if ($scope.posts[a][x].detail.CUSTOMER) {
                var obj = {};
                if (cb) {
                    cb(a, b);
                } else {
                    $scope.posts[a][x].detail.CUSTOMER.push(obj);
                }
            } else {
                $scope.posts[a][x].detail.CUSTOMER = [{}];
                if (cb) cb(a, b);
            }
        },
        removeFn: function (x, b, c) {
            var a = x.split("_")[0];
            if ($scope.posts[a][x].detail[b][c]) $scope.posts[a][x].detail[b].splice(c, 1);
        },
        // 检查券id是否重复和券类型是否重复
        checkCouponList: function (values) {
            for (var i = 0; values && i < values.length - 1; i++) {
                for (var j = i + 1; j < values.length; j++) {
                    if (values[i].id === values[j].id) {
                        return true;
                    }
                    ;
                }
                ;
            }
            ;

            for (var i = 0; values && i < values.length - 1; i++) {
                var oldtype = $scope.ruleFn.getCouponType(values[i].id);
                for (var j = 1; j < values.length; j++) {
                    var newType = $scope.ruleFn.getCouponType(values[j].id);
                    if (oldtype === newType) {
                        return true;
                    }
                    ;
                }
                ;
            }
            ;
            return false;
        },
        //构建使用充值卡的数据
        sendChargeConsumeFn: function (a) {
            return $scope.ruleFn.sendFn(a, undefined, undefined, function (json) {
                var obj = json.detail.CUSTOMER[0];
                if (obj.value) {
                    obj.value = false;
                } else {
                    obj.value = true;
                }
                obj.amount = 1;
                obj.currentAmount = obj.count = 0;
            });
        },
        sendCouponFn: function (a) {
            return $scope.ruleFn.sendFn(a, function (x, tem2) {
                if (x === "COUPON") {
                    for (var key in tem2) {
                        if (tem2[key] && tem2[key].length > 0 && $scope.ruleFn.checkCouponList(tem2[key][0].value)) {
                            return {
                                message: "券或券类型不能重复"
                            };
                        }
                    }
                }
            }, function (b, json) {
                if (b && b === "COUPON") {
                    for (var key in json.detail) {
                        var cache = {};
                        for (var item in json.detail[key]) {
                            if (cache[key] !== json.detail[key][item].value[0].id) {
                                cache[key] = json.detail[key][item].value[0].id;
                            } else {
                                return {
                                    message: "注意：券不能重复"
                                };
                            }
                        }
                    }
                }
            });
        },
        sendFn: function (a, beforeValidateFunc, afterValidateFunc, fixFunc) { ///没搞完，发送规则
            var tem = $scope.posts[a];
            //整理，删除不需要的规则
            for (var x in tem) {
                if (!$scope.view.rules[a].uncheck) {
                    if (!tem[x].check) {
                        if ($scope.tem.rules && $scope.tem.rules[x]) delete $scope.tem.rules[x];
                        if ($scope.view.rules[a].content[x]) {
                            $scope.view.rules[a].content[x].detail = [];
                            $scope.view.rules[a].content[x].check = false;
                        }
                    }
                }
            }
            var jsons = [];
            //遍历有效规则，提交到服务器
            for (var x in tem) {
                if (!$scope.view.rules[a].uncheck) {
                    if (!tem[x].check) {
                        continue;
                    }
                }
                var json = {};
                if ($scope.transferMapRev.hasOwnProperty(x)) {
                    json.type = $scope.transferMapRev[x];
                } else {
                    json.type = x;
                }
                if (json.type == "EXCHANGE_COUPON") {
                    json.type = "POINT_COUPON"
                } else if (json.type == "EXCHANGE_GIFT") {
                    json.type = "POINT_GIFT";
                }
                json.detail = {};

                tem[x]._id && (json._id = tem[x]._id);
                tem[x].amountLimit && (json.amountLimit = tem[x].amountLimit);
                tem[x].celling && (json.celling = tem[x].celling);
                tem[x].countLimit && (json.countLimit = tem[x].countLimit);
                tem[x].timesLimit && (json.timesLimit = tem[x].timesLimit);
                tem[x].obtainCategory && (json.obtainCategory = tem[x].obtainCategory);
                if (json.type == "SPECIAL_PRICE") {
                    tem[x].currentAmount && (json.currentAmount = tem[x].currentAmount);
                    //tem3.currentAmount && (json2.currentAmount = tem3.currentAmount);
                }

                var tem2 = tem[x].detail;
                if (beforeValidateFunc && typeof(beforeValidateFunc) === "function") {
                    var obj = beforeValidateFunc(x, tem2);
                    if (obj) {
                        alert(obj.message);
                        return false;
                    }
                }

                var b;
                var arr = x.split("_");
                if (arr && arr.length > 1) {
                    b = arr[1];
                }

                for (z in tem2) {
                    //todo
                    for (w in tem2[z]) {
                        var tem3 = tem2[z][w],
                            json2 = {};
                        tem3.amount && (json2.amount = tem3.amount);
                        tem3.value && (json2.value = tem3.value);
                        tem3.count && (json2.count = tem3.count);
                        tem3.currentAmount && (json2.currentAmount = tem3.currentAmount);
                        if (json.detail[tem3.id]) json.detail[tem3.id].push(json2);
                        else json.detail[tem3.id] = [json2];
                    }
                }

                if (afterValidateFunc && typeof(afterValidateFunc) === "function") {
                    obj = afterValidateFunc(b, json);
                    if (obj) {
                        alert(obj.message);
                        return false;
                    }
                }
                if (fixFunc && typeof(fixFunc) === "function") {
                    fixFunc(json);
                }
                jsons.push(json);
            }
            var rulesend = ajaxSendFn(angular.toJson(jsons), "/activity/" + $routeParams.activityid + "/rules", "POST", 1);
            if (rulesend.code == 200) { //
                var rulere = ajaxSendFn({ids: rulesend.result[0]}, "/activity/rule/ids", "GET").result || null;
                $scope.view.rules[a].content[x] = rulere[1];
            } else {
                errorMsg(rulesend);
                return false;
            }
            return true;
        },
        addCouponPlanFn: function (a) {
            if (a != "new") return;
            $scope.ruleFn.showCouponPlanFn();
        },
        addRuleFn: function () { //显示添加面板
            $scope.view.modal = {
                title: "添加活动内容",
                html: "addrule"
            };
            $("#showadd").modal("show");
        },
        showCouponPlanFn: function (a) {
            $scope.view.modal = {
                title: "添加券",
                html: "couponNew"
            };
            $("#showadd").modal("show");
        },

        put: function (details, dv) {
            if (!details.value) {
                details.value = [];
            }
            ;
            dv = {};
            details.value.push(dv);
        },
        resetCouponCntFn: function (details, dv) {
            angular.forEach(details.value, function (data, idx) {
                if (data && data.id === dv.id) {
                    this.splice(idx, 1);
                }
                ;
            }, details.value);
        },
        containsCoupon: function (details, id) {
            var tmpIdx = -1;
            for (var i = 0; details.value && i < details.value.length; i++) {
                if (details.value[i].id === id) {
                    tmpIdx = i;
                    break;
                }
            }
            ;
            return tmpIdx;
        },
    };
    $scope.view = {
        rules: {
            "DISCOUNT": {
                name: "打折",
                uncheck: true,
                state: "",
                show: 0,
                addFunc: $scope.ruleFn.addFn,
                postFunc: $scope.ruleFn.sendFn,
                content: {
                    DISCOUNT: []
                }
            },
            // "LIMIT": {
            //     name: "满赠",
            //     uncheck: true,
            //     state: "",
            //     show: 0,
            //     content: {
            //         LIMIT_PREMENT: []
            //     }
            // },
            /*
             "SPEND": {
             name: "抵扣",
             uncheck: true,
             state: "",
             show: 0,
             content: {
             SPEND_AS: []
             }
             },*/
            "SPECIAL": {
                name: "特价",
                uncheck: true,
                state: "",
                show: 0,
                addFunc: $scope.ruleFn.addCouponFn,
                postFunc: $scope.ruleFn.sendFn,
                content: {
                    SPECIAL_PRICE: []
                }
            },
            "POINT": {
                name: "消费积分",
                state: "",
                show: 0,
                addFunc: $scope.ruleFn.addFn,
                postFunc: $scope.ruleFn.sendFn,
                content: {
                    POINT: [],
                    // POINT_GIFT: [],
                    // POINT_COUPON: []
                }
            },
            "POINTCONSUME": {
                name: "积分抵现",
                uncheck: true,
                state: "",
                show: 0,
                addFunc: $scope.ruleFn.addFn,
                postFunc: $scope.ruleFn.sendFn,
                content: {
                    POINTCONSUME: [],
                }
            },
            "CHARGE": {
                name: "充值",
                state: "",
                show: 0,
                addFunc: $scope.ruleFn.addCouponFn,
                postFunc: $scope.ruleFn.sendCouponFn,
                content: {
                    CHARGE_PREMENT: [],
                    CHARGE_POINT: [],
                    CHARGE_GIFT: [],
                    CHARGE_COUPON: []
                }
            },
            "CHARGECONSUME": {
                name: "使用充值卡",
                uncheck: true,
                state: "",
                show: 0,
                addFunc: $scope.ruleFn.addFn,
                postFunc: $scope.ruleFn.sendChargeConsumeFn,
                content: {
                    CHARGECONSUME: [],
                }
            },
            "COUPON": {
                name: "返券活动",
                uncheck: true,
                state: "",
                show: 0,
                addFunc: $scope.ruleFn.addCouponFn,
                postFunc: $scope.ruleFn.sendCouponFn,
                content: {
                    COUPON: [],
                }
            },
            "COUPONFREE": {
                name: "送券活动",
                uncheck: true,
                state: "",
                show: 0,
                addFunc: $scope.ruleFn.addCouponFn,
                postFunc: $scope.ruleFn.sendCouponFn,
                content: {
                    COUPONFREE: [],
                }
            },
            "EXCHANGE": {
                name: "积分兑换",
                state: "",
                show: 0,
                addFunc: $scope.ruleFn.addCouponFn,
                postFunc: $scope.ruleFn.sendCouponFn,
                content: {
                    EXCHANGE_GIFT: [],
                    EXCHANGE_COUPON: []
                }
            }
        },
        counponType: {
            "OFFSETCASH": "代金券",
            "DISCOUNT": "折扣券",
            "PHYSICAL": "实物券",
            "GIFT": "礼券",
            "new": "新增券",
        }
    }
    $scope.ruleFn.oldRuleFn();
    $scope.ruleFn.memberFn();
    $scope.ruleFn.dishFn();
    $scope.ruleFn.getCpouponFn();
    if ($scope.tem && $scope.tem.activityCategory && isEmptyObject($scope.tem.rules)) {
        $scope.ruleFn.stateFn($scope.tem.activityCategory, 'add', 1)
    }

    $scope.check_all = function () { //
        $scope.checkallstr = !$scope.checkallstr;
        if ($scope.checkallstr) { //
            $scope.coupon.shops = $scope.tem.shops;
        } else { //
            $scope.coupon.shops = [];
        }
    }
}]);
app.controller("edit_passwordCtr", function ($scope, $location) {
    $scope.show = {};
    $scope.posts = {};
    $scope.staffadd_form = {};
    $scope.config.breadset = [{
        name: "修改密码"
    }]; //面包屑
    $scope.staffaddsend = function () { //
        if (!$scope.staffadd_form.$valid) {
            $scope.staffadd_form.submitted = true;
            return;
        } else { ///
            if ($scope.posts.oldPassword === $scope.posts.password) {
                alert("原密码和新密码不能相同");
                return;
            }
            var json = {};
            angular.extend(json, $scope.posts);
            json.old = hex_md5($scope.posts.oldPassword);
            json.password = hex_md5($scope.posts.password);
            delete json.oldPassword;
            result = ajaxSendFn(JSON.stringify(json), constUrlDict["staffs-password"], "POST");
            if (result.code == 200) { //
                alert("修改成功");
                $location.path("/");
            } else {
                errorMsg(result);
            }
        }
        ;
    }
})

app.controller("RuleCouponCtr", ['$scope', '$http', 'CouponFactory', function ($scope, $http, couponFac) {
    $scope.config.breadset = [{ //
        name: "活动管理",
        href: indexUrl + "/admin.html#/rule"
    }, {
        name: "券管理"
    }]; //面包屑;
    $scope.view = {
        coupons: couponFac.getAllCoupon(),
    };

    $scope.openOrClose = function () {
        $scope.isOpenOrClose = !$scope.isOpenOrClose;
    };
    $scope.testAddOk = function () {
        console.log('OK');
        $scope.isOpenOrClose = false;
        $scope.view.coupons = couponFac.getAllCoupon();
    };
    $scope.testAddFail = function (result) {
        errorMsg(result);
    };
    $scope.couponDelFn = function (index) {
        if (!confirm("一旦删除将不可恢复，是否确认删除？")) return false;
        var data = ajaxSendFn({}, "/coupon/" + $scope.view.coupons[index].id, "DELETE");
        if (data.code == 200) { //
            $scope.view.coupons.splice(index, 1);
            alert("删除成功");
        } else { //
            alert(data.message)
        }
    }
}]);

app.controller("DevicesCtr", ['$scope', '$http', 'deviceFactory', function ($scope, $http, deviceFac, a) {
    $scope.config.breadset = [{ //
        name: "设备管理",
        href: indexUrl + "/admin.html#/devices"
    }, {
        name: "设备列表"
    }]; //面包屑;
    $scope.search = {
        count: 10
    };
    $scope.getDevices = function () {
        $scope.view = {
            devices: deviceFac.getAllDevices($scope.search),
        };
    };
    $scope.jihuo = function () {
        deviceFac.jihuo(function (data) {
            $scope.getDevices();
        });
    }
    $scope.pageChange = function () {
        $scope.search.page = $scope.view.devices.page;
        $scope.getDevices();
    }
    $scope.getDevices();
}]);
/*菜品管理*/
app.controller('DishCtr', function ($scope, $location, $http) { //shoplist over
    $scope.config.breadset = [{ //
        name: "菜品管理",
        href: indexUrl + "/admin.html#/dish"
    }, {
        name: "菜品列表"
    }]; //面包屑
    var data = ajaxSendFn({}, "/dishes", "GET");
    if (data.code != 200) $location.path("/dish/add");
    $scope.posts = {
        dishes: []
    }
    $scope.dishes = {
        list: data.result
    };
    $scope.remove = function (index) {
        if (!confirm("一旦删除将不可恢复，是否确认删除？")) return false;
        var data = ajaxSendFn({}, "/dishes/" + $scope.dishes.list[index].id, "DELETE");
        if (data.code == 200) { //
            $scope.dishes.list.splice(index, 1);
            alert("删除成功");
        } else { //
            alert(data.message);
        }
    };
    $scope.removeAll = function () {
        if (!$scope.posts.dishes.length) {
            alert("请先选择要删除的菜品！");
            return;
        }
        var data = ajaxSendFn($scope.posts.dishes, "/dishes/ids", "DELETE");
        if (data.code == 200) {
            $scope.posts.dishes = [];
            $scope.dishes.list = ajaxSendFn({}, "/dishes", "GET").result;
        } else {
            alert(data.message);
        }
    };
    $scope.checkAllDishes = function () {
        if ($scope.dishesAll) $scope.posts.dishes = [];
        else {
            angular.forEach($scope.dishes.list, function (value, key) {
                this[key] = value.id;
            }, $scope.posts.dishes);
        }
    }
});
app.controller('DishEditCtr', function ($scope, $location, $http, $routeParams) { //shoplist over
    $scope.config.breadset = [{ //
        name: "菜品管理",
        href: indexUrl + "/admin.html#/dish"
    }, {
        name: "菜品编辑"
    }]; //面包屑
    var data = ajaxSendFn({}, "/dishes/" + $routeParams.dishId, "GET");
    if (data.code != 200) $location.path("/dish");
    $scope.posts = data.result;
    $scope.addpic = function () {
        $scope.tempic = "";
        $("#addpic").modal("show");
    }
    $scope.temimgshow = function (t) {
        var objUrl = getObjectURL(t.files[0]);
        if (objUrl) {
            $scope.tempic = objUrl;
        }
    }
    $scope.sendimg = function (t) { //
        POSTurl = basicUrl + "/pic?";
        options = {
            url: POSTurl + sortUrl(),
            type: "POST",
            success: function (data) {
                if (data.code === 200) {
                    $scope.posts.picUrl = data.result.url;
                    $("#addpic").modal("hide");
                } else {
                    alert("图片上传失败");
                }

            }
        };
        $("#iimgform").ajaxSubmit(options);
    }

    $scope.send = function (a) { //
        sendJson = JSON.stringify($scope.posts);
        postsend = ajaxSendFn(sendJson, "/dishes/" + $scope.posts.id, "POST", 1);
        if (postsend.code == 200) {
            alert("保存成功");
            $location.path("/dish");
        } else { //
            alert("重试");
            return;
        }
    };

});
/*菜品管理 add*/
app.controller('DishAddCtr', function ($scope, $location, $http) { //shoplist over
    $scope.config.breadset = [{ //
        name: "菜品管理",
        href: indexUrl + "/admin.html#/dish"
    }, {
        name: "菜品列表"
    }]; //面包屑
    $scope.tem = {
        uploadTitle: "选择图片"
    };
    $scope.posts = {};
    $scope.addpic = function () {
        $scope.tempic = "";
        $("#addpic").modal("show");
    }
    $scope.temimgshow = function (t) {
        var objUrl = getObjectURL(t.files[0]);
        if (objUrl) {
            $scope.tempic = objUrl;
            $scope.tem = {
                uploadTitle: "已选择"
            };
        }
    }
    $scope.sendimg = function (t) { //
        POSTurl = basicUrl + "/pic?";
        options = {
            url: POSTurl + sortUrl(),
            type: "POST",
            success: function (data) {
                if (data.code === 200) {
                    $scope.posts.picUrl = data.result.url;
                    $("#addpic").modal("hide");
                } else {
                    alert("图片上传失败");
                }

            }
        };
        $("#iimgform").ajaxSubmit(options);
    }

    $scope.send = function (a) { //
        ///dishes {name,code,price,picUrl,"post"}
        sendJson = JSON.stringify($scope.posts);
        postsend = ajaxSendFn(sendJson, "/dishes", "POST", 1);
        if (postsend.code == 200) {
            alert("保存成功");
            $location.path("/dish");
        } else { //
            alert("重试");
        }
    };
});
app.controller('DocCtr', ['$rootScope', '$scope', '$location', 'shopFactory', function ($rootScope, $scope, $location, shopFac) { //shoplist over
    $scope.config.class = "doc";
    $scope.posts = {};
    $scope.view = {
        shops: shopFac.getAllShops(),
        STATISTICS_TEXT: ["当前总余额（元）", "当前总余量（分）", "当前总余量（张）", "当前会员总人数（人）", "历史总计（条）", "当前总消费数（笔）", "当前总消费数（笔）"],
        TYPE: ["recharge", "point", "coupon", "upgrade", "shortmessage", "consumption", "receivables"],
        buttons: ["充值报表", "积分报表", "优惠券报表", "顾客升级情况报表", "短信使用情况报表", "上宾消费报表", "其他收费报表"]
    };
    $scope.sendOrder = function () {
        window.open("admin.html#/doc/detail/" + $scope.posts.order, '_blank');
    };

}]);
app.controller('FinanceCtr', ['$rootScope', '$scope', '$location', 'shopFactory', function ($rootScope, $scope, $location, shopFac) { //shoplist over
    $scope.config.class = "doc";
    $scope.posts = {};
    $scope.view = {
        shops: shopFac.getAllShops(),
        buttons: ["全部报表", "支付宝收款报表", "微信支付收款报表", "现金收款报表", "刷卡收款报表"],
        TYPE: ["recharge", "point", "coupon", "upgrade", "shortmessage", "consumption", "receivables"],
        projects: [{"id": "901", "name": "消费"}, {"id": "902", "name": "充值"}, {"id": "904", "name": "升级"}, {
            "id": "909",
            "name": "收款"
        }],
        //staticNumber:ajaxSendFn({}, "/finance/stat", "GET").result
    };

    $scope.sendOrder = function () {
        window.open("admin.html#/doc/detail/" + $scope.posts.order, '_blank');
    };

}]);
function getObjectURL(file) { //返回图片的URL
    var url = null;
    if (window.createObjectURL != undefined) { //basic
        url = window.createObjectURL(file);
    } else if (window.URL != undefined) { //mozilla(firefox)
        url = window.URL.createObjectURL(file);
    } else if (window.webkitURL != undefined) { //webkitorchrome
        url = window.webkitURL.createObjectURL(file);
    }
    return url;
}

/*菜品管理*/
